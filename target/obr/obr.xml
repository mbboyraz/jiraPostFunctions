<repository lastmodified='20180718121751.960'>
  <resource id='com.example.plugins.tutorial.add-workflow-extensions/1.0.0.SNAPSHOT' symbolicname='com.example.plugins.tutorial.add-workflow-extensions' presentationname='add-workflow-extensions' uri='add-workflow-extensions-1.0-SNAPSHOT.jar' version='1.0.0.SNAPSHOT'>
    <description>This is post function plugin for Jira</description>
    <size>24571608</size>
    <documentation>http://www.obss.com.tr/</documentation>
    <capability name='bundle'>
      <p n='symbolicname' v='com.example.plugins.tutorial.add-workflow-extensions'/>
      <p n='presentationname' v='add-workflow-extensions'/>
      <p n='version' t='version' v='1.0.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.example.plugins.tutorial.api'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.context))' extend='false' multiple='false' optional='true'>Import package org.springframework.osgi.context;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.service.exporter.support))' extend='false' multiple='false' optional='true'>Import package org.springframework.osgi.service.exporter.support;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.service.importer.support))' extend='false' multiple='false' optional='true'>Import package org.springframework.osgi.service.importer.support;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.eclipse.gemini.blueprint.context))' extend='false' multiple='false' optional='true'>Import package org.eclipse.gemini.blueprint.context;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.eclipse.gemini.blueprint.service.exporter))' extend='false' multiple='false' optional='true'>Import package org.eclipse.gemini.blueprint.service.exporter;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.eclipse.gemini.blueprint.service.exporter.support))' extend='false' multiple='false' optional='true'>Import package org.eclipse.gemini.blueprint.service.exporter.support;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.eclipse.gemini.blueprint.service.importer.support))' extend='false' multiple='false' optional='true'>Import package org.eclipse.gemini.blueprint.service.importer.support;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=bsh))' extend='false' multiple='false' optional='false'>Import package bsh</require>
    <require name='package' filter='(&amp;(package=com.atlassian.annotations.tenancy))' extend='false' multiple='false' optional='false'>Import package com.atlassian.annotations.tenancy</require>
    <require name='package' filter='(&amp;(package=com.atlassian.http.url))' extend='false' multiple='false' optional='false'>Import package com.atlassian.http.url</require>
    <require name='package' filter='(&amp;(package=com.atlassian.inject))' extend='false' multiple='false' optional='false'>Import package com.atlassian.inject</require>
    <require name='package' filter='(&amp;(package=com.atlassian.instrumentation.utils.dbc))' extend='false' multiple='false' optional='false'>Import package com.atlassian.instrumentation.utils.dbc</require>
    <require name='package' filter='(&amp;(package=com.atlassian.json.marshal))' extend='false' multiple='false' optional='false'>Import package com.atlassian.json.marshal</require>
    <require name='package' filter='(&amp;(package=com.atlassian.json.marshal.wrapped))' extend='false' multiple='false' optional='false'>Import package com.atlassian.json.marshal.wrapped</require>
    <require name='package' filter='(&amp;(package=com.atlassian.net))' extend='false' multiple='false' optional='false'>Import package com.atlassian.net</require>
    <require name='package' filter='(&amp;(package=com.atlassian.plugin.osgi.factory))' extend='false' multiple='false' optional='false'>Import package com.atlassian.plugin.osgi.factory</require>
    <require name='package' filter='(&amp;(package=com.atlassian.plugin.osgi.factory.descriptor))' extend='false' multiple='false' optional='false'>Import package com.atlassian.plugin.osgi.factory.descriptor</require>
    <require name='package' filter='(&amp;(package=com.atlassian.sal.api))' extend='false' multiple='false' optional='false'>Import package com.atlassian.sal.api</require>
    <require name='package' filter='(&amp;(package=com.atlassian.sal.api.license))' extend='false' multiple='false' optional='false'>Import package com.atlassian.sal.api.license</require>
    <require name='package' filter='(&amp;(package=com.atlassian.sal.api.net))' extend='false' multiple='false' optional='false'>Import package com.atlassian.sal.api.net</require>
    <require name='package' filter='(&amp;(package=com.atlassian.sal.api.user))' extend='false' multiple='false' optional='false'>Import package com.atlassian.sal.api.user</require>
    <require name='package' filter='(&amp;(package=com.atlassian.user))' extend='false' multiple='false' optional='false'>Import package com.atlassian.user</require>
    <require name='package' filter='(&amp;(package=com.atlassian.webresource.spi))' extend='false' multiple='false' optional='false'>Import package com.atlassian.webresource.spi</require>
    <require name='package' filter='(&amp;(package=com.example.plugins.tutorial.api))' extend='false' multiple='false' optional='false'>Import package com.example.plugins.tutorial.api</require>
    <require name='package' filter='(&amp;(package=com.ibm.bsf))' extend='false' multiple='false' optional='false'>Import package com.ibm.bsf</require>
    <require name='package' filter='(&amp;(package=com.ibm.bsf.util))' extend='false' multiple='false' optional='false'>Import package com.ibm.bsf.util</require>
    <require name='package' filter='(&amp;(package=com.ibm.uvm.tools))' extend='false' multiple='false' optional='false'>Import package com.ibm.uvm.tools</require>
    <require name='package' filter='(&amp;(package=com.opensymphony.user))' extend='false' multiple='false' optional='false'>Import package com.opensymphony.user</require>
    <require name='package' filter='(&amp;(package=com.opensymphony.xwork))' extend='false' multiple='false' optional='false'>Import package com.opensymphony.xwork</require>
    <require name='package' filter='(&amp;(package=com.p6spy.engine.logging.appender))' extend='false' multiple='false' optional='false'>Import package com.p6spy.engine.logging.appender</require>
    <require name='package' filter='(&amp;(package=com.sun.jdmk.comm))' extend='false' multiple='false' optional='false'>Import package com.sun.jdmk.comm</require>
    <require name='package' filter='(&amp;(package=com.sun.msv.datatype))' extend='false' multiple='false' optional='false'>Import package com.sun.msv.datatype</require>
    <require name='package' filter='(&amp;(package=com.sun.msv.datatype.xsd))' extend='false' multiple='false' optional='false'>Import package com.sun.msv.datatype.xsd</require>
    <require name='package' filter='(&amp;(package=com.werken.xpath))' extend='false' multiple='false' optional='false'>Import package com.werken.xpath</require>
    <require name='package' filter='(&amp;(package=electric.registry))' extend='false' multiple='false' optional='false'>Import package electric.registry</require>
    <require name='package' filter='(&amp;(package=electric.util))' extend='false' multiple='false' optional='false'>Import package electric.util</require>
    <require name='package' filter='(&amp;(package=javax.accessibility))' extend='false' multiple='false' optional='false'>Import package javax.accessibility</require>
    <require name='package' filter='(&amp;(package=javax.crypto))' extend='false' multiple='false' optional='false'>Import package javax.crypto</require>
    <require name='package' filter='(&amp;(package=javax.crypto.spec))' extend='false' multiple='false' optional='false'>Import package javax.crypto.spec</require>
    <require name='package' filter='(&amp;(package=javax.ejb))' extend='false' multiple='false' optional='false'>Import package javax.ejb</require>
    <require name='package' filter='(&amp;(package=javax.imageio))' extend='false' multiple='false' optional='false'>Import package javax.imageio</require>
    <require name='package' filter='(&amp;(package=javax.imageio.event))' extend='false' multiple='false' optional='false'>Import package javax.imageio.event</require>
    <require name='package' filter='(&amp;(package=javax.imageio.metadata))' extend='false' multiple='false' optional='false'>Import package javax.imageio.metadata</require>
    <require name='package' filter='(&amp;(package=javax.imageio.plugins.jpeg))' extend='false' multiple='false' optional='false'>Import package javax.imageio.plugins.jpeg</require>
    <require name='package' filter='(&amp;(package=javax.imageio.spi))' extend='false' multiple='false' optional='false'>Import package javax.imageio.spi</require>
    <require name='package' filter='(&amp;(package=javax.imageio.stream))' extend='false' multiple='false' optional='false'>Import package javax.imageio.stream</require>
    <require name='package' filter='(&amp;(package=javax.inject))' extend='false' multiple='false' optional='false'>Import package javax.inject</require>
    <require name='package' filter='(&amp;(package=javax.jmdns))' extend='false' multiple='false' optional='false'>Import package javax.jmdns</require>
    <require name='package' filter='(&amp;(package=javax.jms))' extend='false' multiple='false' optional='false'>Import package javax.jms</require>
    <require name='package' filter='(&amp;(package=javax.management))' extend='false' multiple='false' optional='false'>Import package javax.management</require>
    <require name='package' filter='(&amp;(package=javax.naming))' extend='false' multiple='false' optional='false'>Import package javax.naming</require>
    <require name='package' filter='(&amp;(package=javax.net))' extend='false' multiple='false' optional='false'>Import package javax.net</require>
    <require name='package' filter='(&amp;(package=javax.net.ssl))' extend='false' multiple='false' optional='false'>Import package javax.net.ssl</require>
    <require name='package' filter='(&amp;(package=javax.persistence))' extend='false' multiple='false' optional='false'>Import package javax.persistence</require>
    <require name='package' filter='(&amp;(package=javax.persistence.spi))' extend='false' multiple='false' optional='false'>Import package javax.persistence.spi</require>
    <require name='package' filter='(&amp;(package=javax.rmi))' extend='false' multiple='false' optional='false'>Import package javax.rmi</require>
    <require name='package' filter='(&amp;(package=javax.security.auth.callback))' extend='false' multiple='false' optional='false'>Import package javax.security.auth.callback</require>
    <require name='package' filter='(&amp;(package=javax.security.auth.x500))' extend='false' multiple='false' optional='false'>Import package javax.security.auth.x500</require>
    <require name='package' filter='(&amp;(package=javax.security.sasl))' extend='false' multiple='false' optional='false'>Import package javax.security.sasl</require>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='false'>Import package javax.servlet</require>
    <require name='package' filter='(&amp;(package=javax.servlet.descriptor))' extend='false' multiple='false' optional='false'>Import package javax.servlet.descriptor</require>
    <require name='package' filter='(&amp;(package=javax.servlet.http))' extend='false' multiple='false' optional='false'>Import package javax.servlet.http</require>
    <require name='package' filter='(&amp;(package=javax.servlet.jsp))' extend='false' multiple='false' optional='false'>Import package javax.servlet.jsp</require>
    <require name='package' filter='(&amp;(package=javax.servlet.jsp.tagext))' extend='false' multiple='false' optional='false'>Import package javax.servlet.jsp.tagext</require>
    <require name='package' filter='(&amp;(package=javax.sql))' extend='false' multiple='false' optional='false'>Import package javax.sql</require>
    <require name='package' filter='(&amp;(package=javax.swing))' extend='false' multiple='false' optional='false'>Import package javax.swing</require>
    <require name='package' filter='(&amp;(package=javax.swing.border))' extend='false' multiple='false' optional='false'>Import package javax.swing.border</require>
    <require name='package' filter='(&amp;(package=javax.swing.event))' extend='false' multiple='false' optional='false'>Import package javax.swing.event</require>
    <require name='package' filter='(&amp;(package=javax.swing.filechooser))' extend='false' multiple='false' optional='false'>Import package javax.swing.filechooser</require>
    <require name='package' filter='(&amp;(package=javax.swing.plaf))' extend='false' multiple='false' optional='false'>Import package javax.swing.plaf</require>
    <require name='package' filter='(&amp;(package=javax.swing.table))' extend='false' multiple='false' optional='false'>Import package javax.swing.table</require>
    <require name='package' filter='(&amp;(package=javax.swing.text))' extend='false' multiple='false' optional='false'>Import package javax.swing.text</require>
    <require name='package' filter='(&amp;(package=javax.swing.text.html))' extend='false' multiple='false' optional='false'>Import package javax.swing.text.html</require>
    <require name='package' filter='(&amp;(package=javax.swing.text.html.parser))' extend='false' multiple='false' optional='false'>Import package javax.swing.text.html.parser</require>
    <require name='package' filter='(&amp;(package=javax.swing.tree))' extend='false' multiple='false' optional='false'>Import package javax.swing.tree</require>
    <require name='package' filter='(&amp;(package=javax.xml.bind.annotation))' extend='false' multiple='false' optional='false'>Import package javax.xml.bind.annotation</require>
    <require name='package' filter='(&amp;(package=javax.xml.bind.annotation.adapters))' extend='false' multiple='false' optional='false'>Import package javax.xml.bind.annotation.adapters</require>
    <require name='package' filter='(&amp;(package=javax.xml.datatype))' extend='false' multiple='false' optional='false'>Import package javax.xml.datatype</require>
    <require name='package' filter='(&amp;(package=javax.xml.namespace))' extend='false' multiple='false' optional='false'>Import package javax.xml.namespace</require>
    <require name='package' filter='(&amp;(package=javax.xml.parsers))' extend='false' multiple='false' optional='false'>Import package javax.xml.parsers</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform))' extend='false' multiple='false' optional='false'>Import package javax.xml.transform</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform.dom))' extend='false' multiple='false' optional='false'>Import package javax.xml.transform.dom</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform.sax))' extend='false' multiple='false' optional='false'>Import package javax.xml.transform.sax</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform.stream))' extend='false' multiple='false' optional='false'>Import package javax.xml.transform.stream</require>
    <require name='package' filter='(&amp;(package=javax.xml.validation))' extend='false' multiple='false' optional='false'>Import package javax.xml.validation</require>
    <require name='package' filter='(&amp;(package=junit.framework))' extend='false' multiple='false' optional='false'>Import package junit.framework</require>
    <require name='package' filter='(&amp;(package=magick))' extend='false' multiple='false' optional='false'>Import package magick</require>
    <require name='package' filter='(&amp;(package=net.jcip.annotations))' extend='false' multiple='false' optional='false'>Import package net.jcip.annotations</require>
    <require name='package' filter='(&amp;(package=net.sf.hibernate))' extend='false' multiple='false' optional='false'>Import package net.sf.hibernate</require>
    <require name='package' filter='(&amp;(package=net.sf.hibernate.cfg))' extend='false' multiple='false' optional='false'>Import package net.sf.hibernate.cfg</require>
    <require name='package' filter='(&amp;(package=net.sf.hibernate.expression))' extend='false' multiple='false' optional='false'>Import package net.sf.hibernate.expression</require>
    <require name='package' filter='(&amp;(package=net.sf.hibernate.type))' extend='false' multiple='false' optional='false'>Import package net.sf.hibernate.type</require>
    <require name='package' filter='(&amp;(package=ognl))' extend='false' multiple='false' optional='false'>Import package ognl</require>
    <require name='package' filter='(&amp;(package=org.apache.bsf))' extend='false' multiple='false' optional='false'>Import package org.apache.bsf</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.dbcp2))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.dbcp2</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.logging))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.logging</require>
    <require name='package' filter='(&amp;(package=org.apache.log))' extend='false' multiple='false' optional='false'>Import package org.apache.log</require>
    <require name='package' filter='(&amp;(package=org.apache.log.format))' extend='false' multiple='false' optional='false'>Import package org.apache.log.format</require>
    <require name='package' filter='(&amp;(package=org.apache.log.output.io))' extend='false' multiple='false' optional='false'>Import package org.apache.log.output.io</require>
    <require name='package' filter='(&amp;(package=org.apache.lucene.document))' extend='false' multiple='false' optional='false'>Import package org.apache.lucene.document</require>
    <require name='package' filter='(&amp;(package=org.apache.lucene.index))' extend='false' multiple='false' optional='false'>Import package org.apache.lucene.index</require>
    <require name='package' filter='(&amp;(package=org.apache.lucene.queryParser))' extend='false' multiple='false' optional='false'>Import package org.apache.lucene.queryParser</require>
    <require name='package' filter='(&amp;(package=org.apache.lucene.search))' extend='false' multiple='false' optional='false'>Import package org.apache.lucene.search</require>
    <require name='package' filter='(&amp;(package=org.apache.lucene.util))' extend='false' multiple='false' optional='false'>Import package org.apache.lucene.util</require>
    <require name='package' filter='(&amp;(package=org.apache.ojb.broker))' extend='false' multiple='false' optional='false'>Import package org.apache.ojb.broker</require>
    <require name='package' filter='(&amp;(package=org.apache.ojb.broker.query))' extend='false' multiple='false' optional='false'>Import package org.apache.ojb.broker.query</require>
    <require name='package' filter='(&amp;(package=org.apache.tools.ant))' extend='false' multiple='false' optional='false'>Import package org.apache.tools.ant</require>
    <require name='package' filter='(&amp;(package=org.apache.tools.ant.taskdefs))' extend='false' multiple='false' optional='false'>Import package org.apache.tools.ant.taskdefs</require>
    <require name='package' filter='(&amp;(package=org.apache.tools.ant.types))' extend='false' multiple='false' optional='false'>Import package org.apache.tools.ant.types</require>
    <require name='package' filter='(&amp;(package=org.apache.tools.ant.types.resources))' extend='false' multiple='false' optional='false'>Import package org.apache.tools.ant.types.resources</require>
    <require name='package' filter='(&amp;(package=org.apache.xalan.serialize))' extend='false' multiple='false' optional='false'>Import package org.apache.xalan.serialize</require>
    <require name='package' filter='(&amp;(package=org.apache.xml.resolver))' extend='false' multiple='false' optional='false'>Import package org.apache.xml.resolver</require>
    <require name='package' filter='(&amp;(package=org.apache.xml.resolver.readers))' extend='false' multiple='false' optional='false'>Import package org.apache.xml.resolver.readers</require>
    <require name='package' filter='(&amp;(package=org.apache.xpath))' extend='false' multiple='false' optional='false'>Import package org.apache.xpath</require>
    <require name='package' filter='(&amp;(package=org.codehaus.xfire))' extend='false' multiple='false' optional='false'>Import package org.codehaus.xfire</require>
    <require name='package' filter='(&amp;(package=org.codehaus.xfire.aegis))' extend='false' multiple='false' optional='false'>Import package org.codehaus.xfire.aegis</require>
    <require name='package' filter='(&amp;(package=org.codehaus.xfire.aegis.type))' extend='false' multiple='false' optional='false'>Import package org.codehaus.xfire.aegis.type</require>
    <require name='package' filter='(&amp;(package=org.codehaus.xfire.service))' extend='false' multiple='false' optional='false'>Import package org.codehaus.xfire.service</require>
    <require name='package' filter='(&amp;(package=org.codehaus.xfire.service.binding))' extend='false' multiple='false' optional='false'>Import package org.codehaus.xfire.service.binding</require>
    <require name='package' filter='(&amp;(package=org.codehaus.xfire.transport))' extend='false' multiple='false' optional='false'>Import package org.codehaus.xfire.transport</require>
    <require name='package' filter='(&amp;(package=org.codehaus.xfire.transport.http))' extend='false' multiple='false' optional='false'>Import package org.codehaus.xfire.transport.http</require>
    <require name='package' filter='(&amp;(package=org.enhydra.jdbc.pool))' extend='false' multiple='false' optional='false'>Import package org.enhydra.jdbc.pool</require>
    <require name='package' filter='(&amp;(package=org.enhydra.jdbc.standard))' extend='false' multiple='false' optional='false'>Import package org.enhydra.jdbc.standard</require>
    <require name='package' filter='(&amp;(package=org.gjt.xpp))' extend='false' multiple='false' optional='false'>Import package org.gjt.xpp</require>
    <require name='package' filter='(&amp;(package=org.hibernate))' extend='false' multiple='false' optional='false'>Import package org.hibernate</require>
    <require name='package' filter='(&amp;(package=org.hibernate.annotations))' extend='false' multiple='false' optional='false'>Import package org.hibernate.annotations</require>
    <require name='package' filter='(&amp;(package=org.hibernate.cfg))' extend='false' multiple='false' optional='false'>Import package org.hibernate.cfg</require>
    <require name='package' filter='(&amp;(package=org.hibernate.classic))' extend='false' multiple='false' optional='false'>Import package org.hibernate.classic</require>
    <require name='package' filter='(&amp;(package=org.hibernate.criterion))' extend='false' multiple='false' optional='false'>Import package org.hibernate.criterion</require>
    <require name='package' filter='(&amp;(package=org.hibernate.type))' extend='false' multiple='false' optional='false'>Import package org.hibernate.type</require>
    <require name='package' filter='(&amp;(package=org.jdom))' extend='false' multiple='false' optional='false'>Import package org.jdom</require>
    <require name='package' filter='(&amp;(package=org.jdom.input))' extend='false' multiple='false' optional='false'>Import package org.jdom.input</require>
    <require name='package' filter='(&amp;(package=org.jdom.output))' extend='false' multiple='false' optional='false'>Import package org.jdom.output</require>
    <require name='package' filter='(&amp;(package=org.joda.convert))' extend='false' multiple='false' optional='false'>Import package org.joda.convert</require>
    <require name='package' filter='(&amp;(package=org.jsoup))' extend='false' multiple='false' optional='false'>Import package org.jsoup</require>
    <require name='package' filter='(&amp;(package=org.jsoup.helper))' extend='false' multiple='false' optional='false'>Import package org.jsoup.helper</require>
    <require name='package' filter='(&amp;(package=org.jsoup.nodes))' extend='false' multiple='false' optional='false'>Import package org.jsoup.nodes</require>
    <require name='package' filter='(&amp;(package=org.jsoup.parser))' extend='false' multiple='false' optional='false'>Import package org.jsoup.parser</require>
    <require name='package' filter='(&amp;(package=org.jsoup.select))' extend='false' multiple='false' optional='false'>Import package org.jsoup.select</require>
    <require name='package' filter='(&amp;(package=org.junit))' extend='false' multiple='false' optional='false'>Import package org.junit</require>
    <require name='package' filter='(&amp;(package=org.junit.internal.runners))' extend='false' multiple='false' optional='false'>Import package org.junit.internal.runners</require>
    <require name='package' filter='(&amp;(package=org.junit.rules))' extend='false' multiple='false' optional='false'>Import package org.junit.rules</require>
    <require name='package' filter='(&amp;(package=org.junit.runner))' extend='false' multiple='false' optional='false'>Import package org.junit.runner</require>
    <require name='package' filter='(&amp;(package=org.junit.runner.manipulation))' extend='false' multiple='false' optional='false'>Import package org.junit.runner.manipulation</require>
    <require name='package' filter='(&amp;(package=org.junit.runner.notification))' extend='false' multiple='false' optional='false'>Import package org.junit.runner.notification</require>
    <require name='package' filter='(&amp;(package=org.junit.runners))' extend='false' multiple='false' optional='false'>Import package org.junit.runners</require>
    <require name='package' filter='(&amp;(package=org.junit.runners.model))' extend='false' multiple='false' optional='false'>Import package org.junit.runners.model</require>
    <require name='package' filter='(&amp;(package=org.mockito.asm.signature))' extend='false' multiple='false' optional='false'>Import package org.mockito.asm.signature</require>
    <require name='package' filter='(&amp;(package=org.objectweb.jotm))' extend='false' multiple='false' optional='false'>Import package org.objectweb.jotm</require>
    <require name='package' filter='(&amp;(package=org.objectweb.transaction.jta))' extend='false' multiple='false' optional='false'>Import package org.objectweb.transaction.jta</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework</require>
    <require name='package' filter='(&amp;(package=org.prevayler))' extend='false' multiple='false' optional='false'>Import package org.prevayler</require>
    <require name='package' filter='(&amp;(package=org.quartz))' extend='false' multiple='false' optional='false'>Import package org.quartz</require>
    <require name='package' filter='(&amp;(package=org.quartz.impl))' extend='false' multiple='false' optional='false'>Import package org.quartz.impl</require>
    <require name='package' filter='(&amp;(package=org.relaxng.datatype))' extend='false' multiple='false' optional='false'>Import package org.relaxng.datatype</require>
    <require name='package' filter='(&amp;(package=org.springframework.aop.support))' extend='false' multiple='false' optional='false'>Import package org.springframework.aop.support</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.annotation))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.annotation</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.config))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.config</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.parsing))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.parsing</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.support))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.support</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.xml))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.xml</require>
    <require name='package' filter='(&amp;(package=org.springframework.context))' extend='false' multiple='false' optional='false'>Import package org.springframework.context</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.annotation))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.annotation</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.event))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.event</require>
    <require name='package' filter='(&amp;(package=org.springframework.core))' extend='false' multiple='false' optional='false'>Import package org.springframework.core</require>
    <require name='package' filter='(&amp;(package=org.springframework.core.io))' extend='false' multiple='false' optional='false'>Import package org.springframework.core.io</require>
    <require name='package' filter='(&amp;(package=org.springframework.orm.hibernate))' extend='false' multiple='false' optional='false'>Import package org.springframework.orm.hibernate</require>
    <require name='package' filter='(&amp;(package=org.springframework.orm.hibernate.support))' extend='false' multiple='false' optional='false'>Import package org.springframework.orm.hibernate.support</require>
    <require name='package' filter='(&amp;(package=org.springframework.orm.hibernate3))' extend='false' multiple='false' optional='false'>Import package org.springframework.orm.hibernate3</require>
    <require name='package' filter='(&amp;(package=org.springframework.stereotype))' extend='false' multiple='false' optional='false'>Import package org.springframework.stereotype</require>
    <require name='package' filter='(&amp;(package=org.springframework.util))' extend='false' multiple='false' optional='false'>Import package org.springframework.util</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.context))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.context</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.context.support))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.context.support</require>
    <require name='package' filter='(&amp;(package=org.w3c.dom))' extend='false' multiple='false' optional='false'>Import package org.w3c.dom</require>
    <require name='package' filter='(&amp;(package=org.w3c.dom.bootstrap))' extend='false' multiple='false' optional='false'>Import package org.w3c.dom.bootstrap</require>
    <require name='package' filter='(&amp;(package=org.w3c.dom.events))' extend='false' multiple='false' optional='false'>Import package org.w3c.dom.events</require>
    <require name='package' filter='(&amp;(package=org.w3c.dom.ls))' extend='false' multiple='false' optional='false'>Import package org.w3c.dom.ls</require>
    <require name='package' filter='(&amp;(package=org.w3c.dom.ranges))' extend='false' multiple='false' optional='false'>Import package org.w3c.dom.ranges</require>
    <require name='package' filter='(&amp;(package=org.w3c.dom.traversal))' extend='false' multiple='false' optional='false'>Import package org.w3c.dom.traversal</require>
    <require name='package' filter='(&amp;(package=org.w3c.dom.views))' extend='false' multiple='false' optional='false'>Import package org.w3c.dom.views</require>
    <require name='package' filter='(&amp;(package=org.xml.sax))' extend='false' multiple='false' optional='false'>Import package org.xml.sax</require>
    <require name='package' filter='(&amp;(package=org.xml.sax.ext))' extend='false' multiple='false' optional='false'>Import package org.xml.sax.ext</require>
    <require name='package' filter='(&amp;(package=org.xml.sax.helpers))' extend='false' multiple='false' optional='false'>Import package org.xml.sax.helpers</require>
    <require name='package' filter='(&amp;(package=sun.io))' extend='false' multiple='false' optional='false'>Import package sun.io</require>
    <require name='package' filter='(&amp;(package=sun.misc))' extend='false' multiple='false' optional='false'>Import package sun.misc</require>
    <require name='package' filter='(&amp;(package=sun.security.action))' extend='false' multiple='false' optional='false'>Import package sun.security.action</require>
    <require name='package' filter='(&amp;(package=sun.security.util))' extend='false' multiple='false' optional='false'>Import package sun.security.util</require>
    <require name='package' filter='(&amp;(package=tyrex.resource))' extend='false' multiple='false' optional='false'>Import package tyrex.resource</require>
    <require name='package' filter='(&amp;(package=tyrex.resource.jdbc.xa))' extend='false' multiple='false' optional='false'>Import package tyrex.resource.jdbc.xa</require>
    <require name='package' filter='(&amp;(package=tyrex.tm))' extend='false' multiple='false' optional='false'>Import package tyrex.tm</require>
  </resource>
</repository>