<repository lastmodified='20180718033859.228'>
  <resource id='com.example.plugins.tutorial.add-workflow-extensions/1.0.0' symbolicname='com.example.plugins.tutorial.add-workflow-extensions' presentationname='add-workflow-extensions' uri='add-workflow-extensions-1.0.jar' version='1.0.0'>
    <description>This plugin adds workflow extensions to JIRA.</description>
    <size>3747006</size>
    <documentation>http://www.example.com/</documentation>
    <capability name='bundle'>
      <p n='symbolicname' v='com.example.plugins.tutorial.add-workflow-extensions'/>
      <p n='presentationname' v='add-workflow-extensions'/>
      <p n='version' t='version' v='1.0.0'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.example.plugins.tutorial.api'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.context))' extend='false' multiple='false' optional='true'>Import package org.springframework.osgi.context;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.service.exporter.support))' extend='false' multiple='false' optional='true'>Import package org.springframework.osgi.service.exporter.support;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.service.importer.support))' extend='false' multiple='false' optional='true'>Import package org.springframework.osgi.service.importer.support;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.eclipse.gemini.blueprint.context))' extend='false' multiple='false' optional='true'>Import package org.eclipse.gemini.blueprint.context;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.eclipse.gemini.blueprint.service.exporter))' extend='false' multiple='false' optional='true'>Import package org.eclipse.gemini.blueprint.service.exporter;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.eclipse.gemini.blueprint.service.exporter.support))' extend='false' multiple='false' optional='true'>Import package org.eclipse.gemini.blueprint.service.exporter.support;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.eclipse.gemini.blueprint.service.importer.support))' extend='false' multiple='false' optional='true'>Import package org.eclipse.gemini.blueprint.service.importer.support;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=bsh))' extend='false' multiple='false' optional='false'>Import package bsh</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.bc.issue))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.bc.issue</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.component))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.component</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.config))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.config</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.exception))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.exception</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.issue))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.issue</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.issue.comments))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.issue.comments</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.issue.comparator))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.issue.comparator</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.issue.fields))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.issue.fields</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.issue.fields.layout.field))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.issue.fields.layout.field</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.issue.link))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.issue.link</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.issue.priority))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.issue.priority</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.issue.status))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.issue.status</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.issue.util))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.issue.util</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.plugin.workflow))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.plugin.workflow</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.project))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.project</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.security))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.security</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.user))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.user</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.util.collect))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.util.collect</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.workflow))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.workflow</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.workflow.condition))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.workflow.condition</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.workflow.function.issue))' extend='false' multiple='false' optional='false'>Import package com.atlassian.jira.workflow.function.issue</require>
    <require name='package' filter='(&amp;(package=com.atlassian.plugin.osgi.factory))' extend='false' multiple='false' optional='false'>Import package com.atlassian.plugin.osgi.factory</require>
    <require name='package' filter='(&amp;(package=com.opensymphony.module.sequence))' extend='false' multiple='false' optional='false'>Import package com.opensymphony.module.sequence</require>
    <require name='package' filter='(&amp;(package=com.opensymphony.provider))' extend='false' multiple='false' optional='false'>Import package com.opensymphony.provider</require>
    <require name='package' filter='(&amp;(package=com.opensymphony.provider.bean))' extend='false' multiple='false' optional='false'>Import package com.opensymphony.provider.bean</require>
    <require name='package' filter='(&amp;(package=com.opensymphony.user))' extend='false' multiple='false' optional='false'>Import package com.opensymphony.user</require>
    <require name='package' filter='(&amp;(package=com.opensymphony.util))' extend='false' multiple='false' optional='false'>Import package com.opensymphony.util</require>
    <require name='package' filter='(&amp;(package=com.opensymphony.xwork))' extend='false' multiple='false' optional='false'>Import package com.opensymphony.xwork</require>
    <require name='package' filter='(&amp;(package=electric.registry))' extend='false' multiple='false' optional='false'>Import package electric.registry</require>
    <require name='package' filter='(&amp;(package=electric.util))' extend='false' multiple='false' optional='false'>Import package electric.util</require>
    <require name='package' filter='(&amp;(package=javax.ejb))' extend='false' multiple='false' optional='false'>Import package javax.ejb</require>
    <require name='package' filter='(&amp;(package=javax.jms))' extend='false' multiple='false' optional='false'>Import package javax.jms</require>
    <require name='package' filter='(&amp;(package=javax.mail))' extend='false' multiple='false' optional='false'>Import package javax.mail</require>
    <require name='package' filter='(&amp;(package=javax.mail.internet))' extend='false' multiple='false' optional='false'>Import package javax.mail.internet</require>
    <require name='package' filter='(&amp;(package=javax.naming))' extend='false' multiple='false' optional='false'>Import package javax.naming</require>
    <require name='package' filter='(&amp;(package=javax.persistence))' extend='false' multiple='false' optional='false'>Import package javax.persistence</require>
    <require name='package' filter='(&amp;(package=javax.persistence.spi))' extend='false' multiple='false' optional='false'>Import package javax.persistence.spi</require>
    <require name='package' filter='(&amp;(package=javax.rmi))' extend='false' multiple='false' optional='false'>Import package javax.rmi</require>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='false'>Import package javax.servlet</require>
    <require name='package' filter='(&amp;(package=javax.servlet.http))' extend='false' multiple='false' optional='false'>Import package javax.servlet.http</require>
    <require name='package' filter='(&amp;(package=javax.sql))' extend='false' multiple='false' optional='false'>Import package javax.sql</require>
    <require name='package' filter='(&amp;(package=javax.xml.parsers))' extend='false' multiple='false' optional='false'>Import package javax.xml.parsers</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform))' extend='false' multiple='false' optional='false'>Import package javax.xml.transform</require>
    <require name='package' filter='(&amp;(package=net.sf.hibernate))' extend='false' multiple='false' optional='false'>Import package net.sf.hibernate</require>
    <require name='package' filter='(&amp;(package=net.sf.hibernate.cfg))' extend='false' multiple='false' optional='false'>Import package net.sf.hibernate.cfg</require>
    <require name='package' filter='(&amp;(package=net.sf.hibernate.expression))' extend='false' multiple='false' optional='false'>Import package net.sf.hibernate.expression</require>
    <require name='package' filter='(&amp;(package=net.sf.hibernate.type))' extend='false' multiple='false' optional='false'>Import package net.sf.hibernate.type</require>
    <require name='package' filter='(&amp;(package=org.apache.bsf))' extend='false' multiple='false' optional='false'>Import package org.apache.bsf</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.lang))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.lang</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.logging))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.logging</require>
    <require name='package' filter='(&amp;(package=org.apache.ojb.broker))' extend='false' multiple='false' optional='false'>Import package org.apache.ojb.broker</require>
    <require name='package' filter='(&amp;(package=org.apache.ojb.broker.query))' extend='false' multiple='false' optional='false'>Import package org.apache.ojb.broker.query</require>
    <require name='package' filter='(&amp;(package=org.apache.velocity))' extend='false' multiple='false' optional='false'>Import package org.apache.velocity</require>
    <require name='package' filter='(&amp;(package=org.apache.velocity.app))' extend='false' multiple='false' optional='false'>Import package org.apache.velocity.app</require>
    <require name='package' filter='(&amp;(package=org.apache.velocity.context))' extend='false' multiple='false' optional='false'>Import package org.apache.velocity.context</require>
    <require name='package' filter='(&amp;(package=org.codehaus.xfire))' extend='false' multiple='false' optional='false'>Import package org.codehaus.xfire</require>
    <require name='package' filter='(&amp;(package=org.codehaus.xfire.aegis))' extend='false' multiple='false' optional='false'>Import package org.codehaus.xfire.aegis</require>
    <require name='package' filter='(&amp;(package=org.codehaus.xfire.aegis.type))' extend='false' multiple='false' optional='false'>Import package org.codehaus.xfire.aegis.type</require>
    <require name='package' filter='(&amp;(package=org.codehaus.xfire.service))' extend='false' multiple='false' optional='false'>Import package org.codehaus.xfire.service</require>
    <require name='package' filter='(&amp;(package=org.codehaus.xfire.service.binding))' extend='false' multiple='false' optional='false'>Import package org.codehaus.xfire.service.binding</require>
    <require name='package' filter='(&amp;(package=org.codehaus.xfire.transport))' extend='false' multiple='false' optional='false'>Import package org.codehaus.xfire.transport</require>
    <require name='package' filter='(&amp;(package=org.codehaus.xfire.transport.http))' extend='false' multiple='false' optional='false'>Import package org.codehaus.xfire.transport.http</require>
    <require name='package' filter='(&amp;(package=org.hibernate))' extend='false' multiple='false' optional='false'>Import package org.hibernate</require>
    <require name='package' filter='(&amp;(package=org.hibernate.annotations))' extend='false' multiple='false' optional='false'>Import package org.hibernate.annotations</require>
    <require name='package' filter='(&amp;(package=org.hibernate.cfg))' extend='false' multiple='false' optional='false'>Import package org.hibernate.cfg</require>
    <require name='package' filter='(&amp;(package=org.hibernate.classic))' extend='false' multiple='false' optional='false'>Import package org.hibernate.classic</require>
    <require name='package' filter='(&amp;(package=org.hibernate.criterion))' extend='false' multiple='false' optional='false'>Import package org.hibernate.criterion</require>
    <require name='package' filter='(&amp;(package=org.hibernate.type))' extend='false' multiple='false' optional='false'>Import package org.hibernate.type</require>
    <require name='package' filter='(&amp;(package=org.ofbiz.core.entity))' extend='false' multiple='false' optional='false'>Import package org.ofbiz.core.entity</require>
    <require name='package' filter='(&amp;(package=org.ofbiz.core.util))' extend='false' multiple='false' optional='false'>Import package org.ofbiz.core.util</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework</require>
    <require name='package' filter='(&amp;(package=org.prevayler))' extend='false' multiple='false' optional='false'>Import package org.prevayler</require>
    <require name='package' filter='(&amp;(package=org.quartz))' extend='false' multiple='false' optional='false'>Import package org.quartz</require>
    <require name='package' filter='(&amp;(package=org.quartz.impl))' extend='false' multiple='false' optional='false'>Import package org.quartz.impl</require>
    <require name='package' filter='(&amp;(package=org.slf4j))' extend='false' multiple='false' optional='false'>Import package org.slf4j</require>
    <require name='package' filter='(&amp;(package=org.springframework.aop.support))' extend='false' multiple='false' optional='false'>Import package org.springframework.aop.support</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.annotation))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.annotation</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.config))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.config</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.parsing))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.parsing</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.support))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.support</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.xml))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.xml</require>
    <require name='package' filter='(&amp;(package=org.springframework.context))' extend='false' multiple='false' optional='false'>Import package org.springframework.context</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.annotation))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.annotation</require>
    <require name='package' filter='(&amp;(package=org.springframework.core.io))' extend='false' multiple='false' optional='false'>Import package org.springframework.core.io</require>
    <require name='package' filter='(&amp;(package=org.springframework.orm.hibernate))' extend='false' multiple='false' optional='false'>Import package org.springframework.orm.hibernate</require>
    <require name='package' filter='(&amp;(package=org.springframework.orm.hibernate.support))' extend='false' multiple='false' optional='false'>Import package org.springframework.orm.hibernate.support</require>
    <require name='package' filter='(&amp;(package=org.springframework.orm.hibernate3))' extend='false' multiple='false' optional='false'>Import package org.springframework.orm.hibernate3</require>
    <require name='package' filter='(&amp;(package=org.springframework.stereotype))' extend='false' multiple='false' optional='false'>Import package org.springframework.stereotype</require>
    <require name='package' filter='(&amp;(package=org.springframework.util))' extend='false' multiple='false' optional='false'>Import package org.springframework.util</require>
    <require name='package' filter='(&amp;(package=org.w3c.dom))' extend='false' multiple='false' optional='false'>Import package org.w3c.dom</require>
    <require name='package' filter='(&amp;(package=org.xml.sax))' extend='false' multiple='false' optional='false'>Import package org.xml.sax</require>
    <require name='package' filter='(&amp;(package=sun.misc))' extend='false' multiple='false' optional='false'>Import package sun.misc</require>
    <require name='package' filter='(&amp;(package=webwork.action))' extend='false' multiple='false' optional='false'>Import package webwork.action</require>
    <require name='package' filter='(&amp;(package=webwork.dispatcher))' extend='false' multiple='false' optional='false'>Import package webwork.dispatcher</require>
  </resource>
</repository>